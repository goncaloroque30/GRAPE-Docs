{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"GRAPE  <p>     GRAPE is a desktop application for calculating the environmental impacts of aircraft operations at airports. The scope is limited to flight operations (excludes taxiing, ground handling, ...). Aircraft noise and pollutant emissions are the main focus of GRAPE. </p>"},{"location":"#download","title":"Download","text":"<p> Windows x64</p>"},{"location":"#getting-started","title":"Getting Started","text":"<ol> <li>Start by downloading the latest release to your machine.</li> <li>Unzip the downloaded file.</li> <li>Start GRAPE.exe in the unzipped folder.</li> <li>Check the <code>examples</code> folder for studies demonstrating some of the GRAPE features.</li> </ol>"},{"location":"#features","title":"Features","text":"<ul> <li>Graphical user interface (GUI) to edit all the input data, run calculations and visualize outputs.</li> <li>Models based implementation, as little hard coded variables as possible.</li> <li>SQLite as an application file format (.grp). All user inputs can be automated by creating this file and inserting values into it. Further information can be found in the schema documentation.</li> <li>GRAPE.exe can be called from a command line with arguments to automate certain actions. Check the documentation or run <code>GRAPE.exe -h</code> from the command line for further information.</li> <li>Multithreaded calculations, the exact number of threads depending on the hardware used. </li> <li>Supported models:<ul> <li>Performance:<ul> <li>Model specified in the Doc29</li> <li>User provided 4D trajectories</li> </ul> </li> <li>Noise:<ul> <li>Model specified in the Doc29</li> </ul> </li> <li>Fuel flow:<ul> <li>LTO Phase</li> <li>LTO Phase with Doc9889 corrections</li> <li>Senzig Fleming Iovinelle Fuel Flow Model</li> </ul> </li> <li>Emissions:<ul> <li>Boeing Fuel Flow Method 2</li> </ul> </li> </ul> </li> </ul>"},{"location":"#features-not-yet-implemented","title":"Features not (yet) implemented","text":"<ul> <li>BADA4 performance model (you can use the 4D Trajectories if you have access to BADA4 from other sources)</li> <li>Vector route dispersion</li> <li>AzB noise model</li> <li>Elevation of each grid point for a noise run based on a digital elevation model (DEM)</li> <li>nvPM models (FOA3.0, FOX)</li> <li>Noise contour generation from a noise grid (you can use the GeoPackage export feature, and then import that file into a GIS software with contour generation capabilities, e.g. QGIS)</li> </ul>"},{"location":"About/","title":"About","text":"<p>GRAPE is developed and maintained by me, Gon\u00e7alo. Feel free to send me an email if you have any questions or want to chat about GRAPE.</p> <p>The software is open source under the GPL 3.0 license. The official repository is hosted on Github under https://github.com/goncaloroque30/GRAPE.</p>"},{"location":"About/FAQ/","title":"FAQ","text":"Are multi airport studies supported? <p>You can define as may airports as you wish in your study. However, all operations are currently either an arrival, or a departure. Therefore, airport to airport studies are currently not officially operated.</p> Are ground operations such as taxiing supported? <p>No, the noise and emissions produced by ground operations is outside the scope of this tool.</p>"},{"location":"About/ThirdParty/","title":"Third Party Software","text":"<p>This is a complete list of the third party software used by GRAPE:</p> <ul> <li>Doctest</li> <li>GeographicLib</li> <li>GLFW</li> <li>IconFontCppHeaders</li> <li>Dear ImGui</li> <li>Magic Enum C++</li> <li>Native File Dialog Extended</li> <li>Rapidcsv</li> <li>spdlog</li> <li>SQLite</li> <li>stb</li> <li>Vulkan</li> </ul>"},{"location":"Application/","title":"Application","text":"<p>GRAPE implements the models used to calculate the environmental impacts of aircraft operations around airports. It focus solely on arrival and departure operations (taxi, overflight and circuit operations are currently not supported). Based on the same input data, noise, fuel consumption and pollutant emissions can be calculated.</p> <p>A study in GRAPE can be defined as a collection of the input data and its associated databases, the defined scenarios and runs to apply the models to that data and the outputs that those runs produce. A study is saved as a single SQLite file with the .grp extension.</p>"},{"location":"Application/#gui","title":"GUI","text":"<p>The GUI provides user interactions to create, edit and delete all the data used by GRAPE, perform calculations and edit settings. The GUI is split into two main parts:</p> <ul> <li>menu bar: always located on top of the application window.</li> <li>panels: can float anywhere in your screen and be docked into anywhere in the application.</li> </ul> <p></p>"},{"location":"Application/#menu-bar","title":"Menu Bar","text":"<p>The menu bar is always visible and serves to perform main interactions with the application such as opening and closing studies. The menu bar has the following sections:</p> <ul> <li>File</li> <li>Edit</li> <li>View</li> <li>Help</li> </ul>"},{"location":"Application/#file","title":"File","text":"<p>This menu controls which GRAPE study is currently active and being worked on. There can only be one open study at a time. A GRAPE study is always associated with a SQLite database saved on the user computer. Therefore, when creating a new study, the user is prompted to choose the location to which this file will be saved. GRAPE keeps all the changes effectuated via the GUI in sync with the study file, rollback of changes is not yet supported.</p> <p>Additionally, two operations on the GRAPE study can be performed:</p> <ul> <li>Integrity check: verify if all constraints and relations are in place regarding the data currently saved in the study. This will always be the case if data is only edited via the GUI.</li> <li>Vacuum: as you add data to the study, its size will increase. After deleting a significant amount of data from a large study, vacuum it to reduce the file size accordingly.</li> </ul>"},{"location":"Application/#edit","title":"Edit","text":"<p>This menu allows for:</p> <ul> <li>importing data: check the IO Section</li> <li>exporting data: check the IO Section</li> <li>clearing all outputs: this will delete all the outputs from a study, therefore reducing the study size. Consider using when moving large studies. </li> <li>changing the application settings</li> </ul>"},{"location":"Application/#view","title":"View","text":"<p>In this menu the different panels can be made visible or hidden. The panels are split into types:</p> <ul> <li>datasets</li> <li>input data</li> <li>scenarios, where all the runs are performed and outputs shown</li> <li>log panel</li> </ul>"},{"location":"Application/#help","title":"Help","text":"<p>Provides general information about the software and access to the documentation.</p>"},{"location":"Application/#panels","title":"Panels","text":"<p>The panels of the application provide the user with information or enable the user to edit input data and run calculations. Every panel in GRAPE can be moved to any desired position on the screen, docked into another panel or into the main window or closed if not needed.</p> Info <p>Panels can be enabled and disabled in the <code>View</code> section of the menu bar. Clicking the <code>x</code> at the top right of each panel will disable it.</p> <p>There are two main types of panels in GRAPE. The first type presents data in form of tables, without any sort of hierarchical structure. This is ideal for simple data structures, where each record can be given in a single row. This is currently applied to the following panels:</p> <ul> <li>SFI</li> <li>Fleet</li> <li>Flights</li> </ul> <p>The second type of panel presents data that has some form of hierarchy associated. A good example is the airport structure. An airport can have any number of runways, which in turn can have any number of arrival or departure routes. This type of data has two components, its hierarchy and the data itself. Panels for this type of data present the hierarchy on the left in form of a tree structure and the data on the right. The presented data is dependent on the currently selected node in the tree structure.</p> Info <p>In a tree structure, the selected node is always highlighted.</p>"},{"location":"Application/#settings","title":"Settings","text":"<p>The application settings are unique to each GRAPE installation. They are not saved in a study or transferable across computers. The settings are not changed by opening and closing studies or the application.</p>"},{"location":"Application/#global","title":"Global","text":"<p>These settings control the global behaviour of different features in GRAPE. For calculating route outputs, the following can be tweaked:</p> <ul> <li>Arc Interval: the interval at which points are added for vector and RNP routes turns.</li> <li>Heading change warning: the threshold to produce a warning if a point is added to the route output during calculations which changes the heading by more than a certain amount.</li> <li>RNP RF leg radius delta warning: RNP radius to fix legs have in general a very similar start and end radius (distances between start and end of the turn to the turn center). This setting sets the threshold to warn the user in case the start and end radius differ.</li> </ul> <p>For importing ANP data, the following can be controlled:</p> <ul> <li>Create fleet entries: in addition to importing the ANP data to the GRAPE Doc29 data, create fleet entries for each ANP aircraft.</li> <li>'Descend' step as 'Descend Land' step altitude threshold: GRAPE introduces the 'Descend Land' step, which is not directly present in the ANP database. Some profiles in the ANP database may have descend steps to relative low altitudes followed by a landing step. This setting defines which 'Descend' steps in the ANP database will be recognized as the 'Descend Land' step.</li> </ul>"},{"location":"Application/#units","title":"Units","text":"<p>All variables stored in a GRAPE study are stored in SI. However, for visualisation in the GUI, exporting of data and fallback when importing data, different units can be defined here. Besides the units, the number of decimal places shown in the GUI can also be defined.</p>"},{"location":"Application/CommandLineTool/","title":"Command Line Tool","text":"<p>The same executable used to start the GUI can be used from the command line to automate certain actions. The following options are available:</p> <ul> <li>[-h]   - Display this help. Equivalent to [-h -x].</li> <li>[-x]   - Close after processing the command line options, do not run the application.</li> <li>[-c]   - Create a GRAPE study located at the path specified by the following argument.</li> <li>[-o]   - Open a GRAPE study located at the path specified by the following argument.</li> <li>[-anp] - Import the ANP database at the folder path specified by the following argument. Use only in conjunction with -c or -o.</li> <li>[-d]   - Delete all outputs from the study. Use only in conjunction with -o.</li> <li>[-rp]  - Start the performance run specified by the following argument as &lt;scenario name&gt;-&lt;performance run name&gt;. Use only in conjunction with -o.</li> <li>[-rn]  - Start the noise run specified by the following argument as &lt;scenario name&gt;-&lt;performance run name&gt;-&lt;noise run name&gt;. Use only in conjunction with -o.</li> <li>[-re] - Start the emissions run specified by the following argument as &lt;scenario name&gt;-&lt;performance run name&gt;-&lt;emissions run name&gt;. Use only in conjunction with -o.</li> </ul> <p>The options do not need to be passed in any specific order. Example usages (in Windows):</p> <pre><code>GRAPE.exe -h\nGRAPE.exe -x -d -o \"Studies/Grape Study.grp\" -rp \"scenario-performance\" -rn \"scenario-noise\"\nGRAPE.exe -x -o \"Studies/Grape Study.grp\" -re \"scenario-performance-emissions1\" -re \"scenario-performance-emissions2\"\n</code></pre> Warning <p>Names containing the character <code>-</code> might break this functionality.</p>"},{"location":"IO/","title":"IO","text":"<p>Besides editing input data and analyzing outputs via the GUI, GRAPE supports the import and export of data in the following formats:</p> <ul> <li>CSV files (.csv) (import and export)</li> <li>ANP folder (import)</li> <li>GeoPackage Files (.gpkg) (export)</li> </ul>"},{"location":"IO/ANPFolder/","title":"ANP Folder","text":""},{"location":"IO/ANPFolder/#overview","title":"Overview","text":"<p>GRAPE comes with integrated support for directly importing the ANP database into a study. Download and unzip the ANP database into a local folder on your computer and then import it via <code>Edit-&gt;Import-&gt;Database-&gt;ANP</code>. All .csv import rules defined in the CSV Files section must be respected.</p> Info <p>An exception is the variable units. GRAPE assumes that all units are in the original ANP format, and does not interpret them based on column names. </p> <p>The following files must be found in the selected folder:</p> <ul> <li>aircraft</li> <li>jet_engine_coefficients</li> <li>propeller_engine_coefficients</li> <li>aerodynamic_coefficients</li> <li>default_approach_procedural_steps</li> <li>default_departure_procedural_steps</li> <li>default_fixed_point_profiles</li> <li>spectral_classes</li> <li>npd_data</li> </ul> <p>The file matching is case insensitive, and the file name must merely contain the names above. This means that the files</p> <p><pre><code>Aircraft.csv\nmy_aircraft.csv\nAiRcRaFt_strange.csv\n</code></pre> would all be recognized as being the ANP aircraft file. The default_weights file is currently ignored.</p>"},{"location":"IO/ANPFolder/#limitations","title":"Limitations","text":"<p>The Doc29 data structure in GRAPE, into which the ANP database is imported, does not currently support all of the ANP data. This is mostly due to the more restrictive nature of the data structure in GRAPE.</p>"},{"location":"IO/ANPFolder/#thrust-rating","title":"Thrust Rating","text":"<p>The jet and propeller engine coefficients in the ANP database are necessary to apply the equations B-1, B-4 and B-5 of the Doc29 Volume II, which allow to estimate thrust based on a thrust rating and the aircraft state. While in the ANP database the thrust rating can be anything (the most common ones being <code>MaxTakeoff</code> and <code>MaxClimb</code>), GRAPE only supports the thrust ratings in the following table:</p> GRAPE ANP Maximum Takeoff MaxTakeoff Maximum Takeoff High Temperature MaxTkoffHiTemp Maximum Climb MaxClimb Maximum Climb High Temperature MaxClimbHiTemp Idle IdleApproach Idle High Temperature IdleApproachHiTemp <p>This restriction enables two functionalities in GRAPE:</p> <ul> <li>Doc29 departure procedural profiles do not need to specify the thrust rating for each step. Instead only the step at which thrust cutback is performed needs to be specified. All steps before are assumed to use the <code>Maximum Takeoff</code> rating, and all steps after the <code>Maximum Climb</code> rating. The high temperature ratings are automatically used if present and the temperature is above the engine breakpoint temperature (which can be defined for each aircraft). If high temperature ratings are not present, equation B-4 of Doc29 is used.</li> <li>For departure flights, thrust reductions can be specified for the <code>Maximum Takeoff</code> and <code>Maximum Climb</code> phases of flight, which will be directly applied when using the Doc29 performance model, without modifying the underlying Doc29 profile description. One of the examples in the <code>examples</code> folder demonstrates this use case.</li> </ul> <p>For the ANP version 2.3, the following thrust ratings and the applicable aircraft will not be imported:</p> Thrust Rating Aircraft ReduceTakeoff <code>GII</code>, <code>GIIB</code> ReduTkoffHiTemp <code>GII</code>, <code>GIIB</code> ReduceClimb <code>ECLISPE500</code>, <code>GII</code>, <code>GIIB</code> ReduceClimbHiTemp <code>ECLISPE500</code> MaxContinuous <code>727QF</code> MaxContHiTemp <code>727QF</code> <p>Given the relatively low number of aircraft to which the alternative thrust ratings apply, the tradeoff was made for the added functionality described above. GRAPE will log an error when importing these thrust coefficients from the ANP database.</p> Warning <p>The ANP database additionally provides <code>General</code> thrust coefficients for most of its aircraft. These coefficients are intended to be used with equations B-2 and B-3 of the Doc29, which require knowledge of the engine state (Engine Pressure Ratio or N1 value). GRAPE currently does not support these and will silently ignore the <code>General</code> thrust coefficients.</p>"},{"location":"IO/ANPFolder/#noise-thrust-parameter","title":"Noise Thrust Parameter","text":"<p>In GRAPE, a performance output will always contain the Corrected Net Thrust Per Engine for every point. The Doc29 noise data in GRAPE follows this principle, and the required Noise-Power-Distance (NPD) tables to apply the Doc29 noise model always have the thrust parameter in Corrected Net Thrust Per Engine. GRAPE parses the aircraft and npd_data tables of the ANP database, and the following cases can occur:</p> <ul> <li>Aircraft Power Parameter is either <code>Pounds</code> or <code>CNT (lb)</code>: if not yet existent, the corresponding NPD data and spectral classes will be imported into a new Doc29 Noise entry named with the NPD ID, without modifications.</li> <li>Aircraft Power Parameter is either <code>Percent</code> or <code>CNT (% of Max Static Thrust)</code>: a new Doc29 Noise entry will be created, named with the NPD ID followed by the ANP aircraft name. The NPD power parameter will be converted to Corrected Net Thrust Per Engine by multiplying the existing parameter with the aircraft maximum sea level static thrust. The spectral class data will be imported without modifications.</li> <li>Aircraft Power Parameter is anything else: GRAPE does not support other types of thrust parameter, both aircraft and noise data will not be imported.</li> </ul> <p>For the ANP version 2.3, this limitation excludes the following aircraft and NPD data from being imported into GRAPE:</p> Aircraft Thrust Parameter NPD ID <code>CNA206</code> Other (RPM) <code>IO540</code> <code>CNA20T</code> Other (RPM) <code>TIO540</code> <code>PA28</code> Other (RPM) <code>O320D3</code> <code>PA31</code> Other (RPM) <code>TIO542</code> <p>Again the number of affected aircraft is relatively low, and all general aviation aircraft. The tradeoff of not supporting this type of aircraft, in order to have a coherent representation of the thrust state of each aircraft for all performance outputs was made. This enables for fuel flow, noise and emissions models to be applied independent of the databases used to achieve the performance output.</p>"},{"location":"IO/ANPFolder/#noise-metrics","title":"Noise Metrics","text":"<p>GRAPE currently only supports A-Weighted noise metrics. For single events this correspond to the A weighted maximum level (LAmax) and sound equivalent level (SEL). The ANP database additionally contains EPNL and PNLTM data in the NPD tables. It is part of the roadmap to develop support for these metrics in GRAPE. Currently, this ANP data is simply ignored.</p> Warning <p>When importing the ANP database, the EPNL and PNLTM data of the NPD tables will be silently ignored.</p>"},{"location":"IO/CSVFiles/","title":"CSV Files","text":""},{"location":"IO/CSVFiles/#overview","title":"Overview","text":"<p>All the input data in GRAPE can be imported and exported via .csv files. The following applies to all .csv files:</p> <ul> <li>import: the order of the columns must be respected.</li> <li>import: the delimiter will be detected based on the first 100 rows (<code>,</code>, <code>;</code> and <code>tab</code> supported).</li> <li>import: leading and trailing spaces, tabs and new lines will be stripped from names.</li> <li>import: the variable unit (if applicable) will be detected from the column name (e.g. <code>Weight (KG)</code>, <code>Weight_kg</code> and <code>Weight##kG__</code> will all be interpreted as <code>kg</code>). If no unit is detected, the unit selected in the settings will be used. Check the conversion tables for the supported short name of each unit (case insensitive).</li> <li>import: the decimal separator must be a <code>.</code>.</li> <li>export: the first row will be set to the variables names including the variable unit if applicable (e.g. <code>Weight (kg)</code>)</li> </ul> <p>Each of the following sections provides a description of the column order of each .csv known to GRAPE. If the column is mandatory, any row with an empty cell on that column will generate an error on import. The tables in the Datasets and Input Data sections can be imported/exported via the respective menus in the <code>Edit</code> section of the menu bar. Go through the menu to import/export any of the supported files. Clicking on the root nodes (<code>Datasets</code> or <code>Input Data</code>) will prompt the user to select a folder for which all of the respective files will be imported/exported. The root node <code>All Files</code> will import/export all files of both sections. The exported files will have the default names of each supported .csv, and when importing from a folder only this names will be recognized.</p> Info <p>The default names correspond to the names of the sections below (case sensitive).</p> <p>The outputs section below describes tables containing output, which can only be exported. While all the input data can be imported and exported via the <code>Edit</code> menu, the output data can only be exported in the <code>Scenarios</code> panel, under the respective run. The columns Mandatory and Constraint do not apply to output tables.</p>"},{"location":"IO/CSVFiles/#datasets","title":"Datasets","text":""},{"location":"IO/CSVFiles/#doc29-performance","title":"Doc29 Performance","text":"Variable Mandatory Constraint Unit ID \u2713 Type \u2713 <code>Jet</code>, <code>Turboprop</code>, <code>Piston</code>"},{"location":"IO/CSVFiles/#doc29-aerodynamic-coefficients","title":"Doc29 Aerodynamic Coefficients","text":"Variable Mandatory Constraint Unit Doc29 Performance ID \u2713 ID \u2713 Type \u2713 <code>Takeoff</code>, <code>Land</code>, <code>Cruise</code> R \u2713 &gt; 0 B &gt; 0 Doc29 B Coefficient C &gt; 0 Doc29 C/D Coefficients D &gt; 0 Doc29 C/D Coefficients"},{"location":"IO/CSVFiles/#doc29-thrust-ratings","title":"Doc29 Thrust Ratings","text":"Variable Mandatory Constraint Unit Doc29 Performance ID \u2713 Thrust Rating \u2713 <code>Maximum Takeoff</code>, <code>Maximum Climb</code>, <code>Idle</code>, <code>Maximum Takeoff High Temperature</code>, <code>Maximum Climb High Temperature</code>, <code>Idle High Temperature</code> E \u2713 Thrust F \u2713 Doc29 F Coefficient Ga \u2713 Doc29 Ga Coefficient Gb \u2713 Doc29 Gb Coefficient H \u2713 Doc29 H Coefficient"},{"location":"IO/CSVFiles/#doc29-thrust-ratings-propeller","title":"Doc29 Thrust Ratings Propeller","text":"Variable Mandatory Constraint Unit Doc29 Performance ID \u2713 Thrust Rating \u2713 <code>Maximum Takeoff</code>, <code>Maximum Climb</code> Propeller Efficiency \u2713 0 &lt; x \u2264 1 Propeller Power \u2713 &gt; 0 Power"},{"location":"IO/CSVFiles/#doc29-profiles-points","title":"Doc29 Profiles Points","text":"Variable Mandatory Constraint Unit Doc29 Performance ID \u2713 Operation \u2713 Profile ID \u2713 Cumulative Ground Distance \u2713 Distance Altitude ATE \u2713 Altitude True Airspeed \u2713 \u2265 0 Speed Corrected Net Thrust per Engine \u2713 &gt; 0 Thrust"},{"location":"IO/CSVFiles/#doc29-profiles-procedural-arrival","title":"Doc29 Profiles Procedural Arrival","text":"Variable Mandatory Constraint Unit Doc29 Performance ID \u2713 Profile ID \u2713 Step Type \u2713 <code>Descend Decelerate</code>, <code>Descend Idle</code>, <code>Level</code>, <code>Level Decelerate</code>, <code>Level Idle</code>, <code>Descend Land</code>, <code>Ground Decelerate</code> Aerodynamic Coefficient ID Start Altitude ATE Altitude Descent Angle &lt; 0 Start Calibrated Airspeed \u2265 0 Speed Ground Distance &gt; 0 Distance Descend Land - Descent Angle &lt; 0 Descend Land - Threshold Crossing Altitude Altitude Descend Land - Touchdown Roll &gt; 0 Distance Ground Decelerate - Ground Distance \u2265 0 Distance Ground Decelerate - Start Calibrated Airspeed \u2265 0 Speed Ground Decelerate - Start Thrust Percentage 0 \u2264 x \u2264 1"},{"location":"IO/CSVFiles/#doc29-profiles-procedural-departure","title":"Doc29 Profiles Procedural Departure","text":"Variable Mandatory Constraint Unit Doc29 Performance ID \u2713 Profile ID \u2713 Step Type \u2713 <code>Takeoff</code>, <code>Climb</code>, <code>Climb Accelerate</code>, <code>Climb Accelerate Percentage</code> Thrust Cutback &gt; 0 Aerodynamic Coefficient ID \u2713 End Altitude ATE Altitude End Calibrated Airspeed \u2265 0 Speed Climb Rate \u2265 0 Acceleration Percentage 0 &lt; x \u2264 1 Takeoff - Initial Calibrated Airspeed \u2265 0 Speed Info <p>The thrust cutback variable should be empty, except at the thrust cutback step. GRAPE will interpret any non empty cell as the thrust cutback step.</p>"},{"location":"IO/CSVFiles/#doc29-noise","title":"Doc29 Noise","text":"Variable Mandatory Constraint Unit ID \u2713 Lateral Directivity \u2713 <code>Wing</code>, <code>Fuselage</code>, <code>Propeller</code> Start of Roll Correction \u2713 <code>None</code>, <code>Jet</code>, <code>Turboprop</code>"},{"location":"IO/CSVFiles/#doc29-npd-data","title":"Doc29 NPD Data","text":"Variable Mandatory Constraint Unit Doc29 Performance ID \u2713 Operation \u2713 <code>Arrival</code>, <code>Departure</code> Noise Metric \u2713 <code>LAMAX</code>, <code>SEL</code> Thrust \u2713 Thrust Level 200 ft \u2713 Level 400 ft \u2713 Level 600 ft \u2713 Level 1000 ft \u2713 Level 2000 ft \u2713 Level 4000 ft \u2713 Level 6300 ft \u2713 Level 10000 ft \u2713 Level 16000 ft \u2713 Level 25000 ft \u2713"},{"location":"IO/CSVFiles/#doc29-spectrum","title":"Doc29 Spectrum","text":"Variable Mandatory Constraint Unit Doc29 Performance ID \u2713 Operation \u2713 <code>Arrival</code>, <code>Departure</code> Level 50 Hz \u2713 Level 63 Hz \u2713 Level 80 Hz \u2713 Level 100 Hz \u2713 Level 125 Hz \u2713 Level 160 Hz \u2713 Level 200 Hz \u2713 Level 250 Hz \u2713 Level 315 Hz \u2713 Level 400 Hz \u2713 Level 500 Hz \u2713 Level 630 Hz \u2713 Level 800 Hz \u2713 Level 1000 Hz \u2713 Level 1250 Hz \u2713 Level 1600 Hz \u2713 Level 2000 Hz \u2713 Level 2500 Hz \u2713 Level 3150 Hz \u2713 Level 4000 Hz \u2713 Level 5000 Hz \u2713 Level 6300 Hz \u2713 Level 8000 Hz \u2713 Level 10000 Hz \u2713"},{"location":"IO/CSVFiles/#lto-engines","title":"LTO Engines","text":"Variable Mandatory Constraint Unit ID \u2713 Fuel Flow Idle \u2713 \u2265 0 Fuel Flow Fuel Flow Approach \u2713 \u2265 0 Fuel Flow Fuel Flow Climb Out \u2713 \u2265 0 Fuel Flow Fuel Flow Takeoff \u2713 \u2265 0 Fuel Flow Fuel Flow Correction Factor Idle \u2265 0 Fuel Flow Correction Factor Approach \u2265 0 Fuel Flow Correction Factor Climb Out \u2265 0 Fuel Flow Correction Factor Takeoff \u2265 0 Emission Index HC Idle \u2713 \u2265 0 Emission Index Emission Index HC Approach \u2713 \u2265 0 Emission Index Emission Index HC Climb Out \u2713 \u2265 0 Emission Index Emission Index HC Takeoff \u2713 \u2265 0 Emission Index Emission Index CO Idle \u2713 \u2265 0 Emission Index Emission Index CO Approach \u2713 \u2265 0 Emission Index Emission Index CO Climb Out \u2713 \u2265 0 Emission Index Emission Index CO Takeoff \u2713 \u2265 0 Emission Index Emission Index NOx Idle \u2713 \u2265 0 Emission Index Emission Index NOx Approach \u2713 \u2265 0 Emission Index Emission Index NOx Climb Out \u2713 \u2265 0 Emission Index Emission Index NOx Takeoff \u2713 \u2265 0 Emission Index"},{"location":"IO/CSVFiles/#sfi-coefficients","title":"SFI Coefficients","text":"Variable Mandatory Constraint Unit ID \u2713 A \u2713 B1 \u2713 B2 \u2713 B3 \u2713 K1 \u2713 K2 \u2713 K3 \u2713 K4 \u2713"},{"location":"IO/CSVFiles/#fleet","title":"Fleet","text":"Variable Mandatory Constraint Unit ID \u2713 Engine Count \u2713 <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code> Maximum Sea Level Static Thrust \u2713 \u2265 0 Thrust Engine Breakpoint Temperature \u2713 \u2265 0 Temperature Doc29 Performance ID SFI Coefficients ID LTO Engine ID Doc29 Noise ID Doc29 Noise Arrival \u0394 (dB) Doc29 Noise Departure \u0394 (dB)"},{"location":"IO/CSVFiles/#input-data","title":"Input Data","text":""},{"location":"IO/CSVFiles/#airports","title":"Airports","text":"Variable Mandatory Constraint Unit ID \u2713 Longitude \u2713 -180 \u2264 x \u2264 180 Latitude \u2713 -90 \u2264 x \u2264 90 Elevation \u2713 Altitude Reference Temperature \u2265 0 Temperature Reference Pressure \u2265 0 Pressure"},{"location":"IO/CSVFiles/#runways","title":"Runways","text":"Variable Mandatory Constraint Unit Airport ID \u2713 ID \u2713 Longitude \u2713 -180 \u2264 x \u2264 180 Latitude \u2713 -90 \u2264 x \u2264 90 Elevation \u2713 Altitude Length \u2713 &gt; 0 Distance Heading \u2713 0 \u2264 x \u2264 360 Gradient"},{"location":"IO/CSVFiles/#routes-simple","title":"Routes Simple","text":"Variable Mandatory Constraint Unit Airport ID \u2713 Runway ID \u2713 Operation \u2713 <code>Arrival</code>, <code>Departure</code> Route ID \u2713 Longitude \u2713 -180 \u2264 x \u2264 180 Latitude \u2713 -90 \u2264 x \u2264 90"},{"location":"IO/CSVFiles/#routes-vectors","title":"Routes Vectors","text":"Variable Mandatory Constraint Unit Airport ID \u2713 Runway ID \u2713 Operation \u2713 <code>Arrival</code>, <code>Departure</code> Route ID \u2713 Vector Type \u2713 <code>Straight</code>, <code>Turn</code> Distance &gt; 0 Distance Turn Radius &gt; 0 Distance Heading 0 \u2264 x \u2264 360 Turn Direction <code>Right</code>, <code>Left</code>"},{"location":"IO/CSVFiles/#routes-rnp","title":"Routes RNP","text":"Variable Mandatory Constraint Unit Airport ID \u2713 Runway ID \u2713 Operation \u2713 <code>Arrival</code>, <code>Departure</code> Route ID \u2713 Step Type \u2713 <code>Track to Fix</code>, <code>Radius to Fix</code> Longitude \u2713 -180 \u2264 x \u2264 180 Latitude \u2713 -90 \u2264 x \u2264 90 Center Longitude -180 \u2264 x \u2264 180 Center Latitude -90 \u2264 x \u2264 90"},{"location":"IO/CSVFiles/#flights","title":"Flights","text":"Variable Mandatory Constraint Unit ID \u2713 Airport ID \u2713 Runway ID \u2713 Operation \u2713 <code>Arrival</code>, <code>Departure</code> Route ID \u2713 Time \u2713 yyyy-mm-dd HH:MM:SS Count \u2713 \u2265 0 Fleet ID \u2713 Weight \u2713 &gt; 0 Weight Doc29 Profile Takeoff Thrust 0.5 \u2264 x \u2264 1 Climb Thrust 0.5 \u2264 x \u2264 1"},{"location":"IO/CSVFiles/#tracks-4d","title":"Tracks 4D","text":"Variable Mandatory Constraint Unit ID \u2713 Operation \u2713 <code>Arrival</code>, <code>Departure</code> Time \u2713 yyyy-mm-dd HH:MM:SS Count \u2713 \u2265 0 Fleet ID \u2713"},{"location":"IO/CSVFiles/#tracks-4d-points","title":"Tracks 4D Points","text":"Variable Mandatory Constraint Unit ID \u2713 Operation \u2713 <code>Arrival</code>, <code>Departure</code> Flight Phase \u2713 <code>Approach</code>, <code>Landing Roll</code>, <code>Takeoff Roll</code>, <code>Initial Climb</code> <code>Climb</code> Cumulative Ground Distance \u2713 Longitude \u2713 -180 \u2264 x \u2264 180 Latitude \u2713 -90 \u2264 x \u2264 90 Altitude MSL \u2713 Altitude True Airspeed \u2713 \u2265 0 Speed Groundspeed \u2713 \u2265 0 Speed Corrected Net Thrust per Engine \u2713 Thrust Bank Angle \u2713 -90 \u2264 x \u2264 90 Fuel Flow per Engine \u2713 \u2265 0 Fuel Flow Warning <p>The track 4D operation must already exist in the study.</p>"},{"location":"IO/CSVFiles/#scenarios","title":"Scenarios","text":"Variable Mandatory Constraint Unit ID \u2713"},{"location":"IO/CSVFiles/#scenarios-operations","title":"Scenarios Operations","text":"Variable Mandatory Constraint Unit Scenario ID \u2713 Operation ID \u2713 Operation \u2713 <code>Arrival</code>, <code>Departure</code> Type \u2713 <code>Flight</code>, <code>Track 4D</code> Info <p>If Scenario ID is not found in the study, it will be added.</p>"},{"location":"IO/CSVFiles/#performance-runs","title":"Performance Runs","text":"Variable Mandatory Constraint Unit Scenario ID \u2713 ID \u2713 Coordinate System Type \u2713 <code>Geodesic WGS84</code>, <code>Local Cartesian</code> Longitude 0 -180 \u2264 x \u2264 180 Latitude 0 -90 \u2264 x \u2264 90 Filter Minimum Altitude MSL &gt; Filter Maximum Altitude MSL Altitude Filter Maximum Altitude MSL &lt; Filter Minimum Altitude MSL Altitude Filter Minimum Cumulative Ground Distance &lt; Filter Maximum Cumulative Ground Distance Distance Filter Maximum Cumulative Ground Distance &gt; Filter Minimum Cumulative Ground Distance Distance Filter Ground Distance Threshold Distance Segmentation Speed Delta Threshold &gt; 0 Speed Flights Performance Model \u2713 <code>Doc29</code> Flights Enable Doc29 Segmentation <code>0</code>, <code>1</code> Tracks 4D Minimum Points \u2265 0 Tracks Recalculate Cumulative Ground Distance <code>0</code>, <code>1</code> Tracks Recalculate Groundspeed <code>0</code>, <code>1</code> Tracks Recalculate Fuel Flow <code>0</code>, <code>1</code> Fuel Flow Model \u2713 <code>None</code>, <code>LTO</code>, <code>LTO Doc9889</code>, <code>SFI</code>"},{"location":"IO/CSVFiles/#performance-runs-atmospheres","title":"Performance Runs Atmospheres","text":"Variable Mandatory Constraint Unit Scenario ID \u2713 Performance Run ID \u2713 Time \u2713 yyyy-mm-dd HH:MM:SS Temperature Delta \u2713 -100 K \u2264 x \u2264 100 K Temperature Pressure Delta \u2713 -150 hPa \u2264 x \u2264 150.0 hPa Pressure Wind Speed \u2713 Speed Wind Direction 0 \u2264 x \u2264 360 Relative Humidity \u2713 0 \u2264 x \u2264 1"},{"location":"IO/CSVFiles/#noise-runs","title":"Noise Runs","text":"Variable Mandatory Constraint Unit Scenario ID \u2713 Performance Run ID \u2713 ID \u2713 Noise Model \u2713 <code>Doc29</code> Atmospheric Absorption \u2713 <code>None</code>, <code>SAE ARP 866</code>, <code>SAE ARP 5534</code> Receptor Set Type \u2713 <code>Grid</code>, <code>Points</code> Save Single Event Metrics \u2713 <code>0</code>, <code>1</code>"},{"location":"IO/CSVFiles/#noise-runs-grid-receptors","title":"Noise Runs Grid Receptors","text":"Variable Mandatory Constraint Unit Scenario ID \u2713 Performance Run ID \u2713 Noise Run ID \u2713 ID \u2713 Reference Location \u2713 <code>Center</code>, <code>Bottom Left</code>, <code>Bottom Right</code>, <code>Top Left</code>, <code>Top Right</code> Reference Longitude \u2713 -180 \u2264 x \u2264 180 Reference Latitude \u2713 -90 \u2264 x \u2264 90 Reference Altitude MSL \u2713 Altitude Horizontal Spacing \u2713 &gt; 0 Distance Vertical Spacing \u2713 &gt; 0 Distance Horizontal Count \u2713 \u2265 1 Vertical Count \u2713 \u2265 1 Grid Rotation \u2713 -180 \u2264 x \u2264 180"},{"location":"IO/CSVFiles/#noise-runs-point-receptors","title":"Noise Runs Point Receptors","text":"Variable Mandatory Constraint Unit Scenario ID \u2713 Performance Run ID \u2713 Noise Run ID \u2713 ID \u2713 Longitude \u2713 -180 \u2264 x \u2264 180 Latitude \u2713 -90 \u2264 x \u2264 90 Altitude MSL \u2713 Altitude"},{"location":"IO/CSVFiles/#noise-runs-cumulative-metrics","title":"Noise Runs Cumulative Metrics","text":"Variable Mandatory Constraint Unit Scenario ID \u2713 Performance Run ID \u2713 Noise Run ID \u2713 ID \u2713 Threshold (dB) \u2713 Averaging Time Constant (dB) \u2713 Start Time Point \u2713 yyyy-mm-dd HH:MM:SS End Time Point \u2713 yyyy-mm-dd HH:MM:SS Number Above Thresholds # # ..."},{"location":"IO/CSVFiles/#noise-runs-cumulative-metrics-weights","title":"Noise Runs Cumulative Metrics Weights","text":"Variable Mandatory Constraint Unit Scenario ID \u2713 Performance Run ID \u2713 Noise Run ID \u2713 Cumulative Metric ID \u2713 Time \u2713 HH:MM:SS Weight \u2713"},{"location":"IO/CSVFiles/#emissions-runs","title":"Emissions Runs","text":"Variable Mandatory Constraint Unit Scenario ID \u2713 Performance Run ID \u2713 ID \u2713 Emissions Model \u2713 <code>None</code>, <code>Boeing Fuel Flow Method 2</code> Filter Minimum Altitude MSL &gt; Filter Maximum Altitude MSL Altitude Filter Maximum Altitude MSL &lt; Filter Minimum Altitude MSL Altitude Filter Minimum Cumulative Ground Distance &lt; Filter Maximum Cumulative Ground Distance Distance Filter Maximum Cumulative Ground Distance &gt; Filter Minimum Cumulative Ground Distance Distance Save Segment Results \u2713 <code>0</code>, <code>1</code>"},{"location":"IO/CSVFiles/#outputs","title":"Outputs","text":""},{"location":"IO/CSVFiles/#performance-run-output","title":"Performance Run Output","text":"Variable Mandatory Constraint Unit Name Operation Type Point Number Point Origin Flight Phase Cumulative Ground Distance Distance Longitude Latitude Altitude MSL Altitude True Airspeed Speed Groundspeed Speed Corrected Net Thrust per Engine Thrust Bank Angle Fuel Flow per Engine Fuel Flow"},{"location":"IO/CSVFiles/#performance-run-output-single-event","title":"Performance Run Output Single Event","text":"Variable Mandatory Constraint Unit Point Number Point Origin Flight Phase Cumulative Ground Distance Distance Longitude Latitude Altitude MSL Altitude True Airspeed Speed Groundspeed Speed Corrected Net Thrust per Engine Thrust Bank Angle Fuel Flow per Engine Fuel Flow"},{"location":"IO/CSVFiles/#noise-run-output-cumulative-metric","title":"Noise Run Output Cumulative Metric","text":"Variable Mandatory Constraint Unit Receptor ID Longitude Latitude Elevation Altitude Weighted Operation Count Maximum Absolute Maximum Average Exposure # Above X Info <p>The last column (# Above X) can occur 0 or more times, depending on the number of thresholds defined for the metric. The value of  X is replaced in each column ba the respective threshold.</p>"},{"location":"IO/CSVFiles/#noise-run-output-single-event","title":"Noise Run Output Single Event","text":"Variable Mandatory Constraint Unit Receptor ID Longitude Latitude Elevation Altitude Maximum Exposure"},{"location":"IO/CSVFiles/#emissions-run-output","title":"Emissions Run Output","text":"Variable Mandatory Constraint Unit Name Operation Type Fuel Emissions Weight HC Emissions Weight CO Emissions Weight NOx Emissions Weight Info <p>The first row of this output file contains the total emissions of the emissions run. The <code>Name</code> column is set to <code>Total</code> and both <code>Operation</code> and <code>Type</code> are left empty.</p>"},{"location":"IO/CSVFiles/#emissions-run-output-segments","title":"Emissions Run Output Segments","text":"Variable Mandatory Constraint Unit Segment Index Fuel Emissions Weight HC Emissions Weight CO Emissions Weight NOx Emissions Weight Info <p>The first row of this output file contains the total emissions of the operation. The <code>Segment Index</code> column is set to <code>Total</code>.</p>"},{"location":"IO/ConversionTables/","title":"Conversion Tables","text":""},{"location":"IO/ConversionTables/#distance","title":"Distance","text":"Unit Name Conversion m Meter km Kilometer <code>= 1000 m</code> ft Feet <code>= 0.3048 m</code> nm Nautical Mile <code>= 1852 m</code> mi Mile <code>= 1609.344 m</code>"},{"location":"IO/ConversionTables/#altitude","title":"Altitude","text":"<p>See distance units</p>"},{"location":"IO/ConversionTables/#speed","title":"Speed","text":"Unit Name Conversion m/s Meter per Second ft/s Feet per Second <code>= 0.3048 m/s</code> ft/min Feet per Minute <code>= 0.00508 m/s</code> km/h Kilometer per Hour <code>= 0.277778 m/s</code> kts      Knot <code>= 0.514444 m/s</code>"},{"location":"IO/ConversionTables/#vertical-speed","title":"Vertical Speed","text":"<p>See speed units</p>"},{"location":"IO/ConversionTables/#weight","title":"Weight","text":"Unit Name Conversion kg Kilogram lb Pound <code>= 0.453592 kg</code> t Tonne <code>= 1000 kg</code>"},{"location":"IO/ConversionTables/#thrust","title":"Thrust","text":"Unit Name Conversion N Newton lbf Pound of Force <code>= 4.448221 N</code> pdl Poundal <code>= 0.138255 N</code>"},{"location":"IO/ConversionTables/#temperature","title":"Temperature","text":"Unit Name Conversion K Kelvin C Celsius <code>\u00b0C = K - 273.15</code> F Fahrenheit <code>\u00b0F = (K - 273.25) * 9/5 + 32</code>"},{"location":"IO/ConversionTables/#pressure","title":"Pressure","text":"Unit Name Conversion Pa Pascal hPa Hectopascal <code>= 100 Pa</code> bar Bar <code>= 100000 Pa</code> mbar Millibar <code>= 100 Pa</code> inHg Inches of Mercury <code>= 3386.39 Pa</code> mmHg Millimeters of Mercury <code>= 133.322387 Pa</code>"},{"location":"IO/ConversionTables/#power","title":"Power","text":"Unit Name Conversion W Watt kW Kilowatt <code>= 1000 W</code> hp Horsepower <code>= 745.699872 W</code>"},{"location":"IO/ConversionTables/#fuel-flow","title":"Fuel Flow","text":"Unit Name Conversion kg/s Kilogram per Second kg/min Kilogram per Minute <code>= 0.0166667 kg/s</code> lb/s Pound per Second <code>= 0.453592 kg/s</code> lb/min Pound per Minute <code>= 0.00756 kg/s</code>"},{"location":"IO/ConversionTables/#emission-index","title":"Emission Index","text":"Unit Name Conversion kg/kg Kilogram per Kilogram g/kg Gram per Kilogram <code>= 0.001 kg/kg</code> lb/lb Pound per Pound <code>= 1 kg/kg</code> oz/lb Ounces per Pound <code>= 0.0625 kg/kg</code>"},{"location":"IO/ConversionTables/#emissions-weight","title":"Emissions Weight","text":"Unit Name Conversion kg Kilogram g Gram <code>= 0.001 kg</code> lb Pound <code>= 0.453592 kg</code>"},{"location":"IO/ConversionTables/#other","title":"Other","text":""},{"location":"IO/ConversionTables/#doc29-performance-aerodynamic-coefficients","title":"Doc29 Performance Aerodynamic Coefficients","text":""},{"location":"IO/ConversionTables/#b-coefficient","title":"B Coefficient","text":"Unit Name Conversion m/N Meter per Newton ft/lbf Feet per Pound of Force <code>= 0.0685218 m/N</code>"},{"location":"IO/ConversionTables/#c-and-d-coefficients","title":"C and D Coefficients","text":"Unit Name Conversion m/s/sqrtN Meter per Second per Square Root of Newton kt/sqrtlbf Knot per Square Root of Pound of Force <code>= 0.243919 m/s/sqrt(N)</code>"},{"location":"IO/ConversionTables/#doc29-performance-thrust-coefficients","title":"Doc29 Performance Thrust Coefficients","text":""},{"location":"IO/ConversionTables/#e-coefficient","title":"E Coefficient","text":"Unit Name Conversion N Newton lbf Pound of Force <code>= 4.448221 N</code> pdl Poundal <code>= 0.138255 N</code>"},{"location":"IO/ConversionTables/#f-coefficient","title":"F Coefficient","text":"Unit Name Conversion N/m/s Newton per Meter per Second lbf/kt Pound of Force per Knot <code>= 8.64665 N/m/s</code>"},{"location":"IO/ConversionTables/#ga-coefficient","title":"G<sub>A</sub> Coefficient","text":"Unit Name Conversion N/m Newton per Meter lbf/ft Pound of Force per Meter <code>= 14.5939 N/m</code>"},{"location":"IO/ConversionTables/#gb-coefficient","title":"G<sub>B</sub> Coefficient","text":"Unit Name Conversion N/m2 Newton per Meter2 lbf/ft2 Pound of Force per Square Meter <code>= 47.880251 N/m<sup>2</sup></code>"},{"location":"IO/ConversionTables/#h-coefficient","title":"H Coefficient","text":"Unit Name Conversion N/K Newton per Kelvin lbf/C Pound of Force per Degree Celsius <code>= 4.448221 N/K</code>"},{"location":"IO/ConversionTables/#pp-coefficient","title":"P<sub>P</sub> Coefficient","text":"Unit Name Conversion W Watt kW Kilowatt <code>= 1000 W</code> hp Horsepower <code>= 745.699872 W</code>"},{"location":"IO/ConversionTables/#sfi-coefficients","title":"SFI Coefficients","text":""},{"location":"IO/ConversionTables/#1-2-k1-and-k2-coefficients","title":"\u03b1, \u03b2<sub>1</sub>, \u03b2<sub>2</sub>, K<sub>1</sub> and K<sub>2</sub> Coefficients","text":"Unit Name Conversion kg/s/N Kilogram per Second per Newton kg/min/kN Kilogram per Minute per Kilonewton <code>= 16.666667 kg/s/N</code>"},{"location":"IO/ConversionTables/#k3-coefficient","title":"K<sub>3</sub> Coefficient","text":"Unit Name Conversion kg/s/N/m Kilogram per Second per Newton per Meter kg/min/kN/ft Kilogram per Minute per Kilonewton per Feet <code>= 54.680665 kg/s/N/m</code>"},{"location":"IO/ConversionTables/#k4-coefficient","title":"K<sub>4</sub> Coefficient","text":"Unit Name Conversion kg/s/N/N Kilogram per Second per Newton per Newton kg/min/kN/lbf Kilogram per Minute per Kilonewton per Pound of Force <code>= 3.746816 kg/s/N/N</code>"},{"location":"IO/GeopackageFiles/","title":"GeoPackage Files","text":"<p>In a GRAPE study, the following types of data can be georeferenced:</p> <ul> <li>airport structure (airports, runways, routes)</li> <li>performance run outputs</li> <li>noise run outputs (cumulative metrics)</li> </ul> <p>GRAPE can export this data in the GeoPackage format. The exported layers types and attributes are specified in the following sections.</p>"},{"location":"IO/GeopackageFiles/#airport-structure","title":"Airport Structure","text":"<p>The airport structure of all airports defined in a study can be exported via <code>Edit-&gt;Export-&gt;Airports</code>. The following layers are exported:</p> Layer Type Description Attributes airports POINT Airport reference location airport runways_points POINT Runway reference location airport, runway runways_lines LINESTRING Runway line (based on reference location, length and heading) airport, runway routes LINESTRING Output of each route as calculated on the WGS84 coordinate system airport, runway, route, operation, type"},{"location":"IO/GeopackageFiles/#performance-run-outputs","title":"Performance Run Outputs","text":"<p>After running a performance run, the outputs can be visualized in a tabular form for each operation. In the Scenarios panel, select a performance run which has the status Done, open the Output collapsible, click on the orange button and select <code>Export as .gpkg</code>. A GeoPackage file will be created with a single layer:</p> Layer Type Description Attributes performance_run_output LINESTRING Performance output of each operation name, operation, type, time, count, fleet id"},{"location":"IO/GeopackageFiles/#noise-run-outputs","title":"Noise Run Outputs","text":"<p>After running a noise run which has cumulative metrics defined, the outputs can be visualised in a tabular form for each cumulative metric defined. In the Scenarios panel, select a noise run which has the status Done, open the Output Cumulative Metric collapsible, click the orange button and select <code>Export as .gpkg</code>. A GeoPackage file will be created with the following layers:</p> Layer Type Description Attributes noise_run_receptors POINT Receptors for which noise was calculated noise_run_cumulative_noise POINT Cumulative metric output cumulative_metric, count, count_weighted, maximum_absolute_db, maximum_average_db, exposure_db noise_run_cumulative_number_above POINT Cumulative metric number above output cumulative_metric, threshold, number <p>The geographical representation of all three layers is identical (the receptors at which noise is calculated). Only the attributes change.</p>"},{"location":"Schema/","title":"Schema","text":"<p>GRAPE uses SQLite as an application file format (.grp). A basic understanding of SQL is needed in order to understand the GRAPE schema documented in this page. It should be used as a reference to edit .grp files using third party tools or scripts and to obtain the raw output data of GRAPE for further processing. The same file is used to store user inputs as well as application outputs.</p> <p>All data is stored in SI units, angles are stored in degrees and percentages stored as a real number (1 corresponds to 100%). For conversions to other units please see the conversion tables. In the vertical plane, positive angles or gradients always indicate a climb and negative angles or gradients indicate a descent. </p> <p>For convenience, the tables in the GRAPE schema are organized into sections, which are sorted in alphabetical order in this documentation. Each section has a specific function in GRAPE. The name of every table in the schema begins with the section name. All tables which are filled by GRAPE after calculating results have the word output in their name. This tables are intended to be read from, but should not be directly edited. The input and output tables are defined in the same schema and file so that a GRAPE study can be entirely contained in a single .grp file.</p>"},{"location":"Schema/#sections","title":"Sections","text":"<ul> <li>airports</li> <li>doc29_noise</li> <li>doc29_performance</li> <li>emissions_run</li> <li>fleet</li> <li>lto_fuel</li> <li>noise_run</li> <li>operations</li> <li>performance_run</li> <li>scenarios</li> <li>sfi_fuel</li> </ul>"},{"location":"Schema/airports/","title":"airports","text":""},{"location":"Schema/airports/#airports_1","title":"airports","text":"Variable Type NOT NULL Constraint id TEXT \u2713 longitude REAL \u2713 -180 \u2264 x \u2264 180 latitude REAL \u2713 -90 \u2264 x \u2264 90 elevation REAL \u2713 reference_temperature REAL \u2265 0 reference_pressure REAL \u2265 0 Table Constraint Details PRIMARY KEY id"},{"location":"Schema/airports/#airports_runways","title":"airports_runways","text":"Variable NOT NULL Constraint airport_id \u2713 id \u2713 longitude \u2713 -180 \u2264 x \u2264 180 latitude \u2713 -90 \u2264 x \u2264 90 elevation \u2713 length \u2713 &gt; 0 heading \u2713 0 \u2264 x \u2264 360 gradient \u2713 -1 \u2264 x \u2264 1 Table Constraint Details PRIMARY KEY airport_id, id FOREIGN KEY airport_id from airports"},{"location":"Schema/airports/#airports_routes","title":"airports_routes","text":"Variable Type NOT NULL Constraint airport_id TEXT \u2713 runway_id TEXT \u2713 operation TEXT \u2713 <code>Arrival</code>, <code>Departure</code> id TEXT \u2713 type TEXT \u2713 <code>Simple</code>, <code>Vectors</code>, <code>Rnp</code> Table Constraint Details PRIMARY KEY airport_id, runway id, operation, id FOREIGN KEY airport_id, runway_id from airports_runways"},{"location":"Schema/airports/#airports_routes_simple","title":"airports_routes_simple","text":"Variable Type NOT NULL Constraint airport_id TEXT \u2713 runway_id TEXT \u2713 operation TEXT \u2713 <code>Arrival</code>, <code>Departure</code> route_id TEXT \u2713 point_number INTEGER \u2713 \u2265 1 longitude REAL \u2713 -180 \u2264 x \u2264 180 latitude REAL \u2713 -90 \u2264 x \u2264 90 Table Constraint Details PRIMARY KEY airport_id, runway id, operation, route_id, point_number FOREIGN KEY airport_id, runway_id, operation, route_id from airports_routes"},{"location":"Schema/airports/#airports_routes_vectors","title":"airports_routes_vectors","text":"Variable Type NOT NULL Constraint airport_id TEXT \u2713 runway_id TEXT \u2713 operation TEXT \u2713 <code>Arrival</code>, <code>Departure</code> route_id TEXT \u2713 step_number INTEGER \u2713 \u2265 1 vector_type TEXT \u2713 <code>Straight</code>, <code>Turn</code> distance REAL &gt; 0 turn_radius REAL &gt; 0 heading REAL 0 \u2264 x \u2264 360 Table Constraint Details PRIMARY KEY airport_id, runway id, operation, route_id, step_number FOREIGN KEY airport_id, runway_id, operation, route_id from airports_routes CHECK case vector_type <code>Straight</code> - distance NOT NULL CHECK case vector_type <code>Turn</code> - turn_radius NOT NULL, heading NOT NULL"},{"location":"Schema/airports/#airports_routes_rnp","title":"airports_routes_rnp","text":"Variable Type NOT NULL Constraint airport_id TEXT \u2713 runway_id TEXT \u2713 operation TEXT \u2713 <code>Arrival</code>, <code>Departure</code> route_id TEXT \u2713 step_number INTEGER \u2713 \u2265 1 step_type TEXT \u2713 <code>Track to Fix</code>, <code>Radius to Fix</code> longitude REAL \u2713 -180 \u2264 x \u2264 180 latitude REAL \u2713 -90 \u2264 x \u2264 90 center_longitude REAL -180 \u2264 x \u2264 180 center_latitude REAL -90 \u2264 x \u2264 90 Table Constraint Details PRIMARY KEY airport_id, runway id, operation, route_id, step_number FOREIGN KEY airport_id, runway_id, operation, route_id from airports_routes CHECK case step_type <code>Radius to Fix</code> - center_longitude NOT NULL, center_latitude NOT NULL"},{"location":"Schema/doc29_noise/","title":"doc29_noise","text":""},{"location":"Schema/doc29_noise/#doc29_noise_1","title":"doc29_noise","text":"Variable Type NOT NULL Constraint id TEXT \u2713 lateral_directivity TEXT \u2713 <code>Wing</code>, <code>Fuselage</code>, <code>Propeller</code> start_of_roll_correction TEXT \u2713 <code>None</code>, <code>Jet</code>, <code>Turboprop</code> Table Constraint Details PRIMARY KEY id"},{"location":"Schema/doc29_noise/#doc29_noise_npd_data","title":"doc29_noise_npd_data","text":"Variable Type NOT NULL Constraint noise_id TEXT \u2713 operation TEXT \u2713 <code>Arrival</code>, <code>Departure</code> noise_metric TEXT \u2713 <code>LAMAX</code>, <code>SEL</code> thrust REAL \u2713 l_200_ft REAL \u2713 l_400_ft REAL \u2713 l_630_ft REAL \u2713 l_1000_ft REAL \u2713 l_2000_ft REAL \u2713 l_4000_ft REAL \u2713 l_6300_ft REAL \u2713 l_10000_ft REAL \u2713 l_16000_ft REAL \u2713 l_25000_ft REAL \u2713 Table Constraint Details PRIMARY KEY noise_id, operation, noise_metric, thrust FOREIGN KEY noise_id from doc29_noise"},{"location":"Schema/doc29_noise/#doc29_noise_spectrum","title":"doc29_noise_spectrum","text":"Variable Type NOT NULL Constraint noise_id TEXT \u2713 operation TEXT \u2713 <code>Arrival</code>, <code>Departure</code> l_50_hz REAL \u2713 l_63_hz REAL \u2713 l_80_hz REAL \u2713 l_100_hz REAL \u2713 l_125_hz REAL \u2713 l_160_hz REAL \u2713 l_200_hz REAL \u2713 l_250_hz REAL \u2713 l_315_hz REAL \u2713 l_400_hz REAL \u2713 l_500_hz REAL \u2713 l_630_hz REAL \u2713 l_800_hz REAL \u2713 l_1000_hz REAL \u2713 l_1250_hz REAL \u2713 l_1600_hz REAL \u2713 l_2000_hz REAL \u2713 l_2500_hz REAL \u2713 l_3150_hz REAL \u2713 l_4000_hz REAL \u2713 l_5000_hz REAL \u2713 l_6300_hz REAL \u2713 l_8000_hz REAL \u2713 l_10000_hz REAL \u2713 Table Constraint Details PRIMARY KEY noise_id, operation FOREIGN KEY noise_id from doc29_noise"},{"location":"Schema/doc29_performance/","title":"doc29_performance","text":""},{"location":"Schema/doc29_performance/#doc29_performance_1","title":"doc29_performance","text":"Variable Type NOT NULL Constraint id TEXT \u2713 type TEXT \u2713 <code>Jet</code>, <code>Turboprop</code>, <code>Piston</code> Table Constraint Details PRIMARY KEY id"},{"location":"Schema/doc29_performance/#doc29_performance_aerodynamic_coefficients","title":"doc29_performance_aerodynamic_coefficients","text":"Variable Type NOT NULL Constraint performance_id TEXT \u2713 flap_id TEXT \u2713 type TEXT \u2713 <code>Takeoff</code>, <code>Land</code>, <code>Cruise</code> r REAL \u2713 &gt; 0 b REAL &gt; 0 c REAL &gt; 0 d REAL &gt; 0 Table Constraint Details PRIMARY KEY performance_id, flap_id FOREIGN KEY performance_id from doc29_performance CHECK case type <code>Takeoff</code> - b NOT NULL, c NOT NULL CHECK case type <code>Land</code> - d NOT NULL"},{"location":"Schema/doc29_performance/#doc29_performance_thrust","title":"doc29_performance_thrust","text":"Variable Type NOT NULL Constraint performance_id TEXT \u2713 type TEXT \u2713 <code>None</code>, <code>Rating</code>, <code>Rating Propeller</code> Table Constraint Details PRIMARY KEY performance_id FOREIGN KEY performance_id from doc29_performance"},{"location":"Schema/doc29_performance/#doc29_performance_thrust_ratings","title":"doc29_performance_thrust_ratings","text":"Variable Type NOT NULL Constraint performance_id TEXT \u2713 thrust_rating TEXT \u2713 <code>Maximum Takeoff</code>, <code>Maximum Climb</code>, <code>Idle</code>, <code>Maximum Takeoff High Temperature</code>, <code>Maximum Climb High Temperature</code>, <code>Idle High Temperature</code> Table Constraint Details PRIMARY KEY performance_id, thrust_rating FOREIGN KEY performance_id from doc29_performance_thrust"},{"location":"Schema/doc29_performance/#doc29_performance_thrust_rating_coefficients","title":"doc29_performance_thrust_rating_coefficients","text":"Variable Type NOT NULL Constraint performance_id TEXT \u2713 thrust_rating TEXT \u2713 e REAL \u2713 f REAL \u2713 ga REAL \u2713 gb REAL \u2713 h REAL \u2713 Table Constraint Details PRIMARY KEY performance_id, thrust_rating FOREIGN KEY performance_id, thrust_rating from doc29_performance_thrust_ratings"},{"location":"Schema/doc29_performance/#doc29_performance_thrust_rating_coefficients_propeller","title":"doc29_performance_thrust_rating_coefficients_propeller","text":"Variable Type NOT NULL Constraint performance_id TEXT \u2713 thrust_rating TEXT \u2713 efficiency REAL \u2713 propulsive_power REAL \u2713 Table Constraint Details PRIMARY KEY performance_id, thrust_rating FOREIGN KEY performance_id, thrust_rating from doc29_performance_thrust_ratings"},{"location":"Schema/doc29_performance/#doc29_performance_profiles","title":"doc29_performance_profiles","text":"Variable Type NOT NULL Constraint performance_id TEXT \u2713 operation TEXT \u2713 <code>Arrival</code>, <code>Departure</code> id TEXT \u2713 type TEXT \u2713 <code>Points</code>, <code>Procedural</code> Table Constraint Details PRIMARY KEY performance_id, operation, id FOREIGN KEY performance_id from doc29_performance"},{"location":"Schema/doc29_performance/#doc29_performance_profiles_points","title":"doc29_performance_profiles_points","text":"Variable Type NOT NULL Constraint performance_id TEXT \u2713 operation TEXT \u2713 profile_id TEXT \u2713 cumulative_ground_distance REAL \u2713 altitude_afe REAL \u2713 true_airspeed REAL \u2713 \u2265 0 corrected_net_thrust_per_engine REAL \u2713 &gt; 0 Table Constraint Details PRIMARY KEY performance_id, operation, id, profile_id, cumulative_ground_distance FOREIGN KEY performance_id, operation, profile_id from doc29_performance_profiles"},{"location":"Schema/doc29_performance/#doc29_performance_profiles_arrival_procedural","title":"doc29_performance_profiles_arrival_procedural","text":"<p>Each step in the arrival procedural profiles table is defined by a flap setting and three parameters. The following table defines the three parameters for each step type:</p> Step Type Parameter 1 Parameter 2 Parameter 3 Descend Decelerate Start Altitude ATE Descent Angle Start Calibrated Airspeed Descend Idle Start Altitude ATE Descent Angle Start Calibrated Airspeed Level Ground Distance Level Decelerate Ground Distance Start Calibrated Airspeed Level Idle Ground Distance Start Calibrated Airspeed Descend Land Descent Angle Threshold Crossing Height Ground Decelerate Ground Distance Start Calibrated Airspeed Thrust Percentage Info <p>Altitudes are given above threshold elevation. The term above threshold elevation is used to indicate that the profiles are aligned to the runway threshold elevation, not the airport elevation. Therefore, altitude above mean sea level (MSL) is calculated by adding the threshold elevation to the altitudes ATE.</p> Variable Type NOT NULL Constraint performance_id TEXT \u2713 operation TEXT \u2713 profile_id TEXT \u2713 step_number INTEGER \u2713 \u2265 1 step_type TEXT \u2713 <code>Arrival Start</code>, <code>Descend</code>, <code>Descend Decelerate</code>, <code>Descend Idle</code>, <code>Level</code>, <code>Level Decelerate</code>, <code>Level Idle</code>, <code>Descend Land</code>, <code>Ground Decelerate</code> flap_id TEXT parameter_1 REAL parameter_2 REAL parameter_3 REAL Table Constraint Details PRIMARY KEY performance_id, operation, id, profile_id, step_number FOREIGN KEY performance_id, operation, profile_id from doc29_performance_profiles FOREIGN KEY performance_id, flap_id from doc29_performance_aerodynamic_coefficients CHECK case step_type <code>Descend Decelerate</code> - flap_id NOT NULL, parameter_1 NOT NULL, parameter_2 \u2264 0, parameter_3 &gt; 0 CHECK case step_type <code>Descend Idle</code> - flap_id NOT NULL, parameter_1 NOT NULL, parameter_2 &lt; 0, parameter3 \u2265 0 CHECK case step_type <code>Level</code> - flap_id NOT NULL, parameter_1 &gt; 0 CHECK case step_type <code>Level Decelerate</code> - flap_id NOT NULL, parameter_1 &gt; 0, parameter_2 &gt; 0 CHECK case step_type <code>Level Idle</code> - flap_id NOT NULL, parameter_1 &gt; 0, parameter 2 \u2265 0 CHECK case step_type <code>Descend Land</code> - flap_id NOT NULL, parameter_1 \u2264 0, parameter_2 NOT NULL, parameter_3 &gt; 0 CHECK case step_type <code>Ground Decelerate</code> - parameter_1 \u2265 0, parameter_2 \u2265 0, 0 \u2264 parameter_3 \u2264 1"},{"location":"Schema/doc29_performance/#doc29_performance_profiles_departure_procedural","title":"doc29_performance_profiles_departure_procedural","text":"<p>In a departure procedural profile, each step is defined by a thrust cutback flag indicating if the thrust cutback occurs at this step, a mandatory flap setting and three parameters. The following table defines the three parameters for each step type:</p> Step Type Parameter 1 Parameter 2 Parameter 3 Takeoff Initial Calibrated Airspeed Climb End Altitude ATE Climb Accelerate End Altitude ATE End Calibrated Airspeed Climb Rate Climb Accelerate Percentage End Altitude ATE End Calibrated Airspeed Acceleration % Info <p>Altitudes are given above threshold elevation. The term above threshold elevation is used to indicate that the profiles are aligned to the runway threshold elevation, not the airport elevation. Therefore, altitude above mean sea level (MSL) is calculated by adding the threshold elevation to the altitudes ATE.</p> <p>The first step of each departure procedural profile should be a Takeoff step. A flap setting of type Takeoff and the initial calibrated airspeed should be given. Normally, the aircraft will start from a still position and the initial speed will be 0. In case of rolling departures, the initial calibrated airspeed can be set to a higher value. After Takeoff, an arbitrary number of any of the other steps types should be provided.</p> Variable Type NOT NULL Constraint performance_id TEXT \u2713 operation TEXT \u2713 profile_id TEXT \u2713 step_number INTEGER \u2713 \u2265 1 step_type TEXT \u2713 <code>Takeoff</code>, <code>Climb</code>, <code>Climb Accelerate</code>, <code>Climb Accelerate Percentage</code> thrust_cutback INTEGER \u2713 <code>0</code>, <code>1</code> flap_id TEXT \u2713 parameter_1 REAL parameter_2 REAL Table Constraint Details PRIMARY KEY performance_id, operation, id, profile_id, step_number FOREIGN KEY performance_id, operation, profile_id from doc29_performance_profiles FOREIGN KEY performance_id, flap_id from doc29_performance_aerodynamic_coefficients CHECK case step_type <code>Takeoff</code> - parameter_1 NOT NULL CHECK case step_type <code>Climb</code> - parameter_1 NOT NULL CHECK case step_type <code>Climb Accelerate</code> - parameter_1 &gt; 0, parameter_2 &gt; 0 CHECK case step_type <code>Climb Accelerate Percentage</code> - parameter_1 &gt; 0, 0 &lt; parameter_3 \u2264 1"},{"location":"Schema/emissions_run/","title":"emissions_run","text":""},{"location":"Schema/emissions_run/#emissions_run_1","title":"emissions_run","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 id TEXT \u2713 emissions_model TEXT \u2713 <code>None</code>, <code>Boeing Fuel Flow Method 2</code> save_segment_results INTEGER \u2713 <code>0</code>, <code>1</code> Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, id FOREIGN KEY scenario_id, performance_run_id from performance_run"},{"location":"Schema/emissions_run/#fuel_emissions_run_output","title":"fuel_emissions_run_output","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 emissions_run_id TEXT \u2713 fuel REAL \u2713 hc REAL \u2713 co REAL \u2713 nox REAL \u2713 Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, emissions_run_id FOREIGN KEY scenario_id, performance_run_id, emissions_run_id from emissions_run"},{"location":"Schema/emissions_run/#emissions_run_output_operations","title":"emissions_run_output_operations","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 emissions_run_id TEXT \u2713 operation_id TEXT \u2713 operation TEXT \u2713 operation_type TEXT \u2713 fuel REAL \u2713 hc REAL \u2713 co REAL \u2713 nox REAL \u2713 Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, emissions_run_id, operation_id, operation, operation_type FOREIGN KEY scenario_id, performance_run_id, emissions_run_id from emissions_run_output FOREIGN KEY scenario_id, performance_run_id, operation_id, operation, operation_type from performance_run_output"},{"location":"Schema/emissions_run/#emissions_run_output_segments","title":"emissions_run_output_segments","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 emissions_run_id TEXT \u2713 operation_id TEXT \u2713 operation TEXT \u2713 operation_type TEXT \u2713 segment_number INTEGER \u2713 fuel REAL \u2713 hc REAL \u2713 co REAL \u2713 nox REAL \u2713 Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, emissions_run_id, operation_id, operation, operation_type, segment_number FOREIGN KEY scenario_id, performance_run_id, emissions_run_id, operation_id, operation, operation_type from emissions_run_output_operation"},{"location":"Schema/fleet/","title":"fleet","text":"Variable Type NOT NULL Constraint id TEXT \u2713 engine_count INTEGER \u2713 <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code> maximum_sea_level_static_thrust REAL \u2713 \u2265 1 engine_breakpoint_temperature REAL \u2713 \u2265 0 doc29_performance_id TEXT sfi_id TEXT lto_engine_id TEXT doc29_noise_id TEXT doc29_noise_arrival_delta_db REAL \u2713 doc29_noise_departure_delta_db REAL \u2713 Table Constraint Details PRIMARY KEY id FOREIGN KEY doc29_performance_id from doc29_performance FOREIGN KEY sfi_id from sfi_fuel FOREIGN KEY lto_engine_id from lto_fuel_emissions FOREIGN KEY doc29_noise_id from doc29_noise"},{"location":"Schema/lto_fuel_emissions/","title":"LTO Fuel & Emissions","text":""},{"location":"Schema/lto_fuel_emissions/#lto_fuel_emissions","title":"lto_fuel_emissions","text":"Variable Type NOT NULL Constraint id TEXT \u2713 fuel_flow_idle REAL \u2713 \u2265 0 fuel_flow_approach REAL \u2713 \u2265 0 fuel_flow_climb_out REAL \u2713 \u2265 0 fuel_flow_takeoff REAL \u2713 \u2265 0 fuel_flow_correction_factor_idle REAL \u2265 0 fuel_flow_correction_factor_approach REAL \u2265 0 fuel_flow_correction_factor_climb_out REAL \u2265 0 fuel_flow_correction_factor_takeoff REAL \u2265 0 emission_index_hc_idle REAL \u2713 \u2265 0 emission_index_hc_approach REAL \u2713 \u2265 0 emission_index_hc_climb Out REAL \u2713 \u2265 0 emission_index_hc_takeoff REAL \u2713 \u2265 0 emission_index_co_idle REAL \u2713 \u2265 0 emission_index_co_approach REAL \u2713 \u2265 0 emission_index_co_climb_out REAL \u2713 \u2265 0 emission_index_co_takeoff REAL \u2713 \u2265 0 emission_index_nox_idle REAL \u2713 \u2265 0 emission_index_nox_approach REAL \u2713 \u2265 0 emission_index_nox_climb_out REAL \u2713 \u2265 0 emission_index_nox_takeoff REAL \u2713 \u2265 0 Table Constraint Details PRIMARY KEY id"},{"location":"Schema/noise_run/","title":"noise_run","text":""},{"location":"Schema/noise_run/#noise_run_1","title":"noise_run","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 id TEXT \u2713 noise_model TEXT \u2713 <code>Doc29</code> atmospheric_absorption TEXT \u2713 <code>None</code>, <code>SAE ARP 866</code>, <code>SAE ARP 5534</code> receptor_set_type TEXT \u2713 <code>Grid</code>, <code>Points</code> save_single_event_metrics INTEGER \u2713 <code>0</code>, <code>1</code> Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, id FOREIGN KEY scenario_id, performance_run_id from performance_run"},{"location":"Schema/noise_run/#noise_run_cumulative_metrics","title":"noise_run_cumulative_metrics","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 noise_run_id TEXT \u2713 id TEXT \u2713 threshold_db REAL \u2713 \u2265 0 averaging_time_constant_db REAL \u2713 \u2265 0 start_time_point TEXT \u2713 yyyy-mm-dd HH:MM:SS end_time_point TEXT \u2713 yyyy-mm-dd HH:MM:SS Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, noise_run_id, id FOREIGN KEY scenario_id, performance_run_id, noise_run_id from noise_run"},{"location":"Schema/noise_run/#noise_run_cumulative_metrics_number_above_thresholds","title":"noise_run_cumulative_metrics_number_above_thresholds","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 noise_run_id TEXT \u2713 noise_run_cumulative_metric_id TEXT \u2713 threshold REAL \u2713 \u2265 0 Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, noise_run_id, noise_run_cumulative_metric_id FOREIGN KEY scenario_id, performance_run_id, noise_run_id, noise_run_cumulative_metric_id from noise_run_cumulative_metrics"},{"location":"Schema/noise_run/#noise_run_cumulative_metrics_weights","title":"noise_run_cumulative_metrics_weights","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 noise_run_id TEXT \u2713 noise_run_cumulative_metric_id TEXT \u2713 time_of_day TEXT \u2713 weight REAL \u2713 Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, noise_run_id, noise_run_cumulative_metric_id FOREIGN KEY scenario_id, performance_run_id, noise_run_id, noise_run_cumulative_metric_id from noise_run_cumulative_metrics"},{"location":"Schema/noise_run/#noise_run_output_cumulative","title":"noise_run_output_cumulative","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 noise_run_id TEXT \u2713 noise_run_cumulative_metric_id TEXT \u2713 receptor_id TEXT \u2713 count REAL \u2713 maximum_absolute_db REAL \u2713 maximum_average_db REAL \u2713 exposure_db REAL \u2713 Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, noise_run_id, noise_run_cumulative_metric_id, receptor_id FOREIGN KEY scenario_id, performance_run_id, noise_run_id, noise_run_cumulative_metric_id from noise_run_cumulative_metrics FOREIGN KEY scenario_id, performance_run_id, noise_run_id, receptor_id from noise_run_output_receptors"},{"location":"Schema/noise_run/#noise_run_output_cumulative_number_above","title":"noise_run_output_cumulative_number_above","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 noise_run_id TEXT \u2713 noise_run_cumulative_metric_id TEXT \u2713 threshold_db TEXT \u2713 receptor_id TEXT \u2713 number_above REAL \u2713 Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, noise_run_id, noise_run_cumulative_metric_id, threshold, receptor_id FOREIGN KEY scenario_id, performance_run_id, noise_run_id, noise_run_cumulative_metric_id, threshold from noise_run_cumulative_metrics_number_above_thresholds FOREIGN KEY scenario_id, performance_run_id, noise_run_id, receptor_id from noise_run_output_receptors"},{"location":"Schema/noise_run/#noise_run_output_receptors","title":"noise_run_output_receptors","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 noise_run_id TEXT \u2713 id TEXT \u2713 longitude REAL \u2713 latitude REAL \u2713 altitude_msl REAL \u2713 Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, noise_run_id, _id FOREIGN KEY scenario_id, performance_run_id, noise_run_id from noise_run"},{"location":"Schema/noise_run/#noise_run_output_single_event","title":"noise_run_output_single_event","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 noise_run_id TEXT \u2713 receptor_id TEXT \u2713 operation_id TEXT \u2713 operation TEXT \u2713 operation_type TEXT \u2713 maximum_db REAL \u2713 exposure_db REAL \u2713 Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, noise_run_id, receptor_id, operation_id, operation, operation_type FOREIGN KEY scenario_id, performance_run_id, operation_id, operation, operation_type from performance_run_output FOREIGN KEY scenario_id, performance_run_id, noise_run_id, receptor_id from noise_run_output_receptors"},{"location":"Schema/noise_run/#noise_run_receptor_grid","title":"noise_run_receptor_grid","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 noise_run_id TEXT \u2713 reference_location TEXT \u2713 <code>Center</code>, <code>Bottom Left</code>, <code>Bottom Right</code>, <code>Top Left</code>, <code>Top Right</code> reference_longitude REAL \u2713 -180 \u2264 x \u2264 180 reference_latitude REAL \u2713 -90 \u2264 x \u2264 90 reference_altitude_msl REAL \u2713 horizontal_spacing REAL \u2713 &gt; 0 vertical_spacing REAL \u2713 &gt; 0 horizontal_count INTEGER \u2713 \u2265 1 vertical_count INTEGER \u2713 \u2265 1 grid_rotation REAL \u2713 -180 \u2264 x \u2264 180 Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, noise_run_id FOREIGN KEY scenario_id, performance_run_id, noise_run_id from noise_run"},{"location":"Schema/noise_run/#noise_run_receptor_points","title":"noise_run_receptor_points","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 noise_run_id TEXT \u2713 id TEXT \u2713 longitude REAL \u2713 -180 \u2264 x \u2264 180 latitude REAL \u2713 -90 \u2264 x \u2264 90 altitude_msl REAL \u2713 Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, noise_run_id, id FOREIGN KEY scenario_id, performance_run_id, noise_run_id from noise_run"},{"location":"Schema/operations/","title":"operations","text":""},{"location":"Schema/operations/#operations_flights","title":"operations_flights","text":"Variable Type NOT NULL Constraint id TEXT \u2713 airport_id TEXT \u2713 runway_id TEXT \u2713 operation TEXT \u2713 route_id TEXT \u2713 time TEXT \u2713 yyyy-mm-dd HH:MM:SS count REAL \u2713 \u2265 0 fleet_id TEXT \u2713 weight REAL \u2713 &gt; 0 Table Constraint Details PRIMARY KEY id, operation FOREIGN KEY airport_id, runway_id, operation, route_id from airports_routes FOREIGN KEY fleet_id from fleet"},{"location":"Schema/operations/#operations_flights_arrival","title":"operations_flights_arrival","text":"Variable Type NOT NULL Constraint operation_id TEXT \u2713 operation TEXT \u2713 doc29_profile_id TEXT Table Constraint Details PRIMARY KEY operation_id, operation FOREIGN KEY operation_id, operation from operations_flights"},{"location":"Schema/operations/#operations_flights_departure","title":"operations_flights_departure","text":"Variable Type NOT NULL Constraint operation_id TEXT \u2713 operation TEXT \u2713 doc29_profile_id TEXT thrust_percentage_takeoff REAL \u2713 0.5 \u2264 x \u2264 1 thrust_percentage_climb REAL \u2713 0.5 \u2264 x \u2264 1 Table Constraint Details PRIMARY KEY operation_id, operation FOREIGN KEY operation_id, operation from operations_flights"},{"location":"Schema/operations/#operations_tracks_4d","title":"operations_tracks_4d","text":"Variable Type NOT NULL Constraint id TEXT \u2713 operation TEXT \u2713 <code>Arrival</code>, <code>Departure</code> time TEXT \u2713 yyyy-mm-dd HH:MM:SS count REAL \u2713 \u2265 0 fleet_id TEXT \u2713 Table Constraint Details PRIMARY KEY id, operation FOREIGN KEY fleet_id from fleet"},{"location":"Schema/operations/#operations_tracks_4d_points","title":"operations_tracks_4d_points","text":"Variable Type NOT NULL Constraint operation_id TEXT \u2713 operation TEXT \u2713 <code>Arrival</code>, <code>Departure</code> point_number INTEGER \u2713 \u2265 1 flight_phase TEXT \u2713 <code>Approach</code>, <code>Landing Roll</code>, <code>Takeoff Roll</code>, <code>Initial Climb</code>, <code>Climb</code> cumulative_ground_distance REAL \u2713 longitude REAL \u2713 -180 \u2264 x \u2264 180 latitude REAL \u2713 -90 \u2264 x \u2264 90 altitude_msl REAL \u2713 true_airspeed REAL \u2713 \u2265 0 groundspeed REAL \u2713 \u2265 0 corrected_net_thrust_per_engine REAL \u2713 bank_angle REAL \u2713 -90 \u2264 x \u2264 90 fuel_flow_per_engine REAL \u2713 \u2265 0 Table Constraint Details PRIMARY KEY operation_id, operation, point_number FOREIGN KEY operation_id, operation from operation_tracks_4d"},{"location":"Schema/performance_run/","title":"performance_run","text":""},{"location":"Schema/performance_run/#performance_run_1","title":"performance_run","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 id TEXT \u2713 coordinate_system_type TEXT \u2713 <code>Geodesic WGS84</code>, <code>Local Cartesian</code> coordinate_system_longitude_0 REAL -180 \u2264 x \u2264 180 coordinate_system_latitude_0 REAL -90 \u2264 x \u2264 90 filter_minimum_altitude REAL filter_maximum_altitude REAL filter_minimum_cumulative_ground_distance REAL filter_maximum_cumulative_ground_distance REAL filter_ground_distance_threshold REAL \u2265 0 segmentation_speed_delta_threshold REAL &gt; 0 flights_performance_model TEXT \u2713 <code>Doc29</code> flights_doc29_low_altitude_segmentation INTEGER <code>0</code>, <code>1</code> tracks_4d_minimum_points INTEGER \u2265 0 tracks_4d_recalculate_cumulative_ground_distance INTEGER <code>0</code>, <code>1</code> tracks_4d_recalculate_groundspeed INTEGER <code>0</code>, <code>1</code> tracks_4d_recalculate_fuel_flow INTEGER <code>0</code>, <code>1</code> fuel_flow_model TEXT \u2713 <code>None</code>, <code>LTO</code>, <code>SFI</code> Table Constraint Details PRIMARY KEY scenario_id, id FOREIGN KEY scenario_id from scenarios"},{"location":"Schema/performance_run/#performance_run_atmospheres","title":"performance_run_atmospheres","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 time TEXT \u2713 yyyy-mm-dd HH:MM:SS temperature_delta REAL \u2713 -100 \u2264 x \u2264 100 pressure_delta REAL \u2713 -15000 \u2264 x \u2264 15000 wind_speed REAL \u2713 wind_direction REAL 0 \u2264 x \u2264 360 relative_humidity REAL \u2713 0 \u2264 x \u2264 1 Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, time FOREIGN KEY scenario_id, performance_run_id from performance_run Info <p>If the wind direction is empty, GRAPE will interpret the wind speed as being a constant headwind.</p>"},{"location":"Schema/performance_run/#performance_run_output","title":"performance_run_output","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 operation_id TEXT \u2713 operation TEXT \u2713 <code>Arrival</code>, <code>Departure</code> operation_type TEXT \u2713 <code>Flight</code>, <code>Track 4D</code> Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, operation_id, operation, operation_type FOREIGN KEY scenario_id, performance_run_id from performance_run"},{"location":"Schema/performance_run/#performance_run_output_points","title":"performance_run_output_points","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 performance_run_id TEXT \u2713 operation_id TEXT \u2713 operation TEXT \u2713 operation_type TEXT \u2713 point_number INTEGER \u2713 point_origin TEXT \u2713 <code>Route</code>, <code>Profile</code>, <code>Route &amp; Profile</code>, <code>Track 4D</code>, <code>Speed Segmentation</code>, <code>Doc29 Takeoff Roll Segmentation</code>, <code>Doc29 Final Approach Segmentation</code>, <code>Doc29 Initial Climb Segmentation</code> flight_phase TEXT \u2713 <code>Approach</code>, <code>Landing Roll</code>, <code>Takeoff Roll</code>, <code>Initial Climb</code>, <code>Climb</code> cumulative_ground_distance REAL \u2713 longitude REAL \u2713 latitude REAL \u2713 altitude_msl REAL \u2713 true_airspeed REAL \u2713 ground_speed REAL \u2713 corrected_net_thrust_per_engine REAL \u2713 bank_angle REAL \u2713 fuel_flow_per_engine REAL \u2713 Table Constraint Details PRIMARY KEY scenario_id, performance_run_id, operation_id, operation, operation_type, point_number FOREIGN KEY scenario_id, performance_run_id, operation_id, operation, operation_type from performance_run_output"},{"location":"Schema/scenarios/","title":"scenarios","text":""},{"location":"Schema/scenarios/#scenarios_1","title":"scenarios","text":"Variable Type NOT NULL Constraint id TEXT \u2713 Table Constraint Details PRIMARY KEY id"},{"location":"Schema/scenarios/#scenarios_flights","title":"scenarios_flights","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 operation_id TEXT \u2713 operation TEXT \u2713 Table Constraint Details PRIMARY KEY scenario_id, operation_id, operation FOREIGN KEY scenario_id from scenarios FOREIGN KEY operation_id, operation from operations_flights"},{"location":"Schema/scenarios/#scenarios_tracks_4d","title":"scenarios_tracks_4d","text":"Variable Type NOT NULL Constraint scenario_id TEXT \u2713 operation_id TEXT \u2713 operation TEXT \u2713 Table Constraint Details PRIMARY KEY scenario_id, operation_id, operation FOREIGN KEY scenario_id from scenarios FOREIGN KEY operation_id, operation from operations_tracks_4d"},{"location":"Schema/sfi_fuel/","title":"sfi_fuel","text":"Variable Type NOT NULL Constraint id TEXT \u2713 a REAL \u2713 b1 REAL \u2713 b2 REAL \u2713 b3 REAL \u2713 k1 REAL \u2713 k2 REAL \u2713 k3 REAL \u2713 k4 REAL \u2713 Table Constraint Details PRIMARY KEY id"}]}